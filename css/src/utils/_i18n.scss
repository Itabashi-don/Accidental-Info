@charset "UTF-8";



// Localized languages
$languages: (
	en: (
		attrs: (null, "en", "en-US"),
		messages: (
			"idea.navigation.weather": "Weather",
			"idea.navigation.transportation": "Transportation",
			"idea.navigation.river": "River",
			"idea.navigation.municipal": "Municipal",

			"idea.weatherPanel.weatherRadar": "Weather Radar",
			"idea.weatherPanel.forecast": "Weekly Forecast",
			"idea.weatherPanel.warning": "Warning and Advisory",

			"idea.transportationPanel.railways": "Rail Operations",

			"idea.riverPanel.arakawa": "Arakawa",

			"idea.municipalPanel.itabashi": "Itabashi"
		)
	),

	ja: (
		attrs: ("ja", "ja-JP"),
		messages: (
			"idea.navigation.weather": "気象情報",
			"idea.navigation.transportation": "交通機関情報",
			"idea.navigation.river": "河川情報",
			"idea.navigation.municipal": "自治体情報",

			"idea.weatherPanel.weatherRadar": "気象レーダー",
			"idea.weatherPanel.forecast": "週間予報",
			"idea.weatherPanel.warning": "警報・注意報",
			
			"idea.transportationPanel.railways": "鉄道運行情報",

			"idea.riverPanel.arakawa": "荒川",

			"idea.municipalPanel.itabashi": "板橋区"
		)
	)
);



// Apply localizations of provided language
@mixin i18n ($langCode) {
	$lang: map-get($languages, $langCode);
	$langAttrs: map-get($lang, attrs);
	$langMessages: map-get($lang, messages);

	$langSelectors: null;
	@each $langAttr in $langAttrs {
		@if ($langAttr == null) {
			$langSelectors: append($langSelectors, ":root", "comma")
		} @else {
			$langSelectors: append($langSelectors, ":root:lang(#{$langAttr})", "comma");
		}
	}

	#{$langSelectors} {
		@each $localeId, $content in $langMessages {
			*[locale="#{$localeId}"] {
				&::before { content: $content }
			}
		}
	}
}



@each $langCode in map-keys($languages) { @include i18n($langCode) }